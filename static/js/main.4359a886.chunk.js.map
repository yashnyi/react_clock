{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","timer","setInterval","setState","console","log","toLocaleTimeString","this","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","Math","floor","random","setRandomName","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA4CeA,E,4MAxCbC,MAAQ,CACNC,KAAM,IAAIC,M,EAGZC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CACZJ,KAAM,IAAIC,OAGZI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,wBAC3B,K,uDAEH,WACE,OAAOC,KAAKN,Q,gCAGd,SAAmBO,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCL,QAAQC,IAAR,qCAA0CG,EAAUC,KAApD,eAA+DF,KAAKG,MAAMD,S,kCAI9E,WACEE,cAAcJ,KAAKN,S,oBAGrB,WACE,OACE,8BACGM,KAAKT,MAAMC,KAAKO,0B,GA/BLM,IAAMC,WCyDXC,G,kNAtDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,G,EAG/CC,cAAgB,WACd,EAAKjB,SAAS,CACZa,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,K,EAIjDE,UAAY,WACV,EAAKlB,SAAS,CACZY,gBAAgB,K,EAIpBO,UAAY,WACV,EAAKnB,SAAS,CACZY,gBAAgB,K,4CAIpB,WACE,OACE,yBAAKQ,UAAU,OACb,2CACA,2CAEG,IACAhB,KAAKT,MAAMiB,eACR,kBAAC,EAAD,CAAON,KAAMF,KAAKT,MAAMkB,YACxB,sCAEN,oDAEG,IACAT,KAAKT,MAAMkB,WAGd,4BAAQQ,KAAK,SAASC,QAASlB,KAAKc,WAApC,cAGA,4BAAQG,KAAK,SAASC,QAASlB,KAAKe,WAApC,cAGA,4BAAQE,KAAK,SAASC,QAASlB,KAAKa,eAApC,wB,GA/CUR,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4359a886.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  timer = setInterval(() => {\n    this.setState({\n      date: new Date(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString())\n  }, 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.date.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 100) + 1,\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100) + 1,\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible\n            ? <Clock name={this.state.clockName} />\n            : <></>}\n        </p>\n        <p>\n          Current random number:\n          {' '}\n          {this.state.clockName}\n        </p>\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}